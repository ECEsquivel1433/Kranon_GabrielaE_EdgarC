@model ML.Libro
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h5>INGRESE LOS DATOS DEL NUEVO LIBRO: </h5>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Libro", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdLibro, new { @class = "visually-hidden" })
                            @Html.TextBoxFor(model => model.IdLibro, new { @class = "visually-hidden form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.IdLibro)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtFechaCreacion" })
                            @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Publicacion)
                            @Html.TextBoxFor(model => model.Publicacion, new { @class = "form-control", @id = "txtFechaCreacion" })
                            @Html.ValidationMessageFor(model => model.Publicacion, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Descripcion)
                            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control", @id = "txtFechaCreacion" })
                            @Html.ValidationMessageFor(model => model.Descripcion, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Autor.IdAutor)
                            <span class="input-group-addon"><i class="fa-sharp fa-solid fa-phone"></i></span>
                            @Html.DropDownListFor(model => model.Autor.IdAutor, new SelectList(Model.Autor.Autores, "IdAutor", "Nombre"), "Selecciona una Opcion", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Autor.IdAutor)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Editorial.IdEditorial)
                            <span class="input-group-addon"><i class="fa-sharp fa-solid fa-phone"></i></span>
                            @Html.DropDownListFor(model => model.Editorial.IdEditorial, new SelectList(Model.Editorial.Editoriales, "IdEditorial", "Nombre"), "Selecciona una Opcion", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Editorial.IdEditorial)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Imagen)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user-plus"></i></span>
                                <input id="inpImagen" type='file' class="form-control" name="inpImagen" onchange="validateFile(this), visualizarImagen(this);  " />
                            </div>
                            @if (Model.Imagen == null || Model.Imagen == " ")
                            {
                                <img id="Img" src="/NewFolder/icon-256x256.png" style="width:250px ; height:250px" />
                            }
                            else
                            {
                                <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Libro", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>

    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png'];
        var fileExtension = document.getElementById('inpImagen').value.split('.').pop().toLowerCase();
        var isValidFile = false;
        for (var index in allowedExtension) {
            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('inpImagen').value = ""
        }
        return isValidFile;
    }
</script>
<script>
    function visualizarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>